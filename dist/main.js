!function(t){var i={};function e(s){if(i[s])return i[s].exports;var o=i[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=i,e.d=function(t,i,s){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:s})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(e.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var o in t)e.d(s,o,function(i){return t[i]}.bind(null,o));return s},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){"use strict";e.r(i);const s={PIPE_SPEED:2,PIPE_WIDTH:32,PIPE_HEIGHT:16,EDGE_BUFFER:200,PIPE_SPACING:220,WARM_UP_SECONDS:1,SCALE:3};class o{constructor(t){this.dimensions=t;const i=this.dimensions.width+60*s.WARM_UP_SECONDS*s.PIPE_SPEED;this.pipes=[this.randomPipe(i),this.randomPipe(i+s.PIPE_SPACING),this.randomPipe(i+2*s.PIPE_SPACING)]}randomPipe(t){const i=this.dimensions.height-2*s.EDGE_BUFFER,e=Math.random()*i+s.EDGE_BUFFER;return{bottomPipe:{left:t,right:t+s.SCALE*s.PIPE_WIDTH,top:e,bottom:e+s.SCALE*s.PIPE_HEIGHT},passed:!1}}drawBackground(t,i,e,s,o,n,h){t.drawImage(i,0,0,288,208,0,0,this.dimensions.width,this.dimensions.height),t.drawImage(e,0,0,32,112,0,.6*this.dimensions.height,this.dimensions.width,.6*this.dimensions.height),t.drawImage(n,0,0,44,36,.6*this.dimensions.width,.57*this.dimensions.height,44,36),t.drawImage(s,0,0,64,112,0,.65*this.dimensions.height,this.dimensions.width,.65*this.dimensions.height),t.drawImage(h,0,0,76,59,.1*this.dimensions.width,.7*this.dimensions.height,76,59)}animate(t,i,e,s,o,n,h,r){this.drawBackground(t,i,e,s,o,n,h),this.movePipes(),this.drawPipes(t,r)}movePipes(){if(this.pipes.forEach(t=>{t.bottomPipe.left-=s.PIPE_SPEED,t.bottomPipe.right-=s.PIPE_SPEED}),this.pipes[0].bottomPipe.right<=0){this.pipes.shift();const t=this.pipes[1].bottomPipe.left+s.PIPE_SPACING;this.pipes.push(this.randomPipe(t))}}drawPipes(t,i){this.pipes.forEach(e=>{let s=e.bottomPipe.right-e.bottomPipe.left,o=e.bottomPipe.bottom-e.bottomPipe.top;t.drawImage(i,0,16,32,16,e.bottomPipe.left,e.bottomPipe.top,s,o)})}collidesWith(t){let i=!1;return this.pipes.forEach(e=>{this.overlap(e.bottomPipe,t)&&(i=!0)}),i}overlap(t,i){return i.right>=t.left&&i.right<=t.right&&i.bottom>=t.top&&i.bottom<=t.bottom&&(console.log("pipe",t),console.log("bird",i),!0)}passedPipe(t,i){this.pipes.forEach(e=>{e.bottomPipe.right<t.left&&(e.passed||(e.passed=!0,i()))})}}const n={BIRD_WIDTH:30,BIRD_HEIGHT:40,scale:3,width:32,height:32};class h{constructor(t){this.velocity=0,this.dimensions=t,this.x=1/3*this.dimensions.width,this.y=.5*this.dimensions.height,this.character=new Image,this.character.src="./dist/assets/character2.png",this.drawFrame=this.drawFrame.bind(this),this.drawBird=this.drawBird.bind(this),this.currentLoopIndex=0}drawBird(t,i){const e=[0,1,2,3];this.drawFrame(e[this.currentLoopIndex],0,this.x,this.y,t),1===i&&this.currentLoopIndex++,this.currentLoopIndex>=e.length&&(this.currentLoopIndex=0)}drawFrame(t,i,e,s,o){const h=n.scale*n.width,r=n.scale*n.height;o.drawImage(this.character,t*n.width,i*n.height,n.width,n.height,e,s,h,r)}animate(t,i){this.move(),this.drawBird(t,i)}move(){this.y+=this.velocity,this.velocity+=.5}flap(){this.velocity=-8}getBounds(){const t=n.scale*n.width,i=n.scale*n.height;return{left:this.x,right:this.x+t,top:this.y,bottom:this.y+i}}outOfBounds(){let t=this.getBounds(),i=t.top<0,e=t.bottom>=this.dimensions.height;return i||e}}class r{constructor(t){this.ctx=t.getContext("2d"),this.dimensions={width:t.width,height:t.height},this.frameCount=0,this.water=new Image,this.water.src="./dist/assets/water.png",this.back=new Image,this.back.src="./dist/assets/back.png",this.middle=new Image,this.middle.src="./dist/assets/middle.png",this.front=new Image,this.front.src="./dist/assets/front.png",this.backBoat=new Image,this.backBoat.src="./dist/assets/boat-far.png",this.frontBoat=new Image,this.frontBoat.src="./dist/assets/boat-middle.png",this.obstacle=new Image,this.obstacle.src="./dist/assets/Spikes.png",this.click=this.click.bind(this),this.animate=this.animate.bind(this),t.addEventListener("mousedown",this.click),window.onload=()=>{this.restart()}}restart(){this.running=!1,this.score=0,this.level=new o(this.dimensions),this.bird=new h(this.dimensions),this.animate()}animate(){this.level.animate(this.ctx,this.water,this.back,this.middle,this.front,this.backBoat,this.frontBoat,this.obstacle),this.bird.animate(this.ctx,this.frameCount),this.frameCount++,this.frameCount>15&&(this.frameCount=0),this.gameOver()&&(alert("You've lost"),this.restart()),this.level.passedPipe(this.bird.getBounds(),()=>{this.score+=1,console.log(this.score)}),this.drawScore(),this.running&&requestAnimationFrame(this.animate)}drawScore(){const t={x:this.dimensions.width/2,y:this.dimensions.height/4};this.ctx.font="bold 40pt Helvetica",this.ctx.fillStyle="white",this.ctx.fillText(this.score,t.x,t.y),this.ctx.lineWidth=2}gameOver(){return this.level.collidesWith(this.bird.getBounds())||this.bird.outOfBounds()}play(){this.running=!0,this.animate()}click(){this.running||this.play(),this.bird.flap()}}document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("bird-game");new r(t).restart()})}]);